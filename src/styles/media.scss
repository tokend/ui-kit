@import "vars";

@mixin respond-above($breakpoint) {
  $breakpoint-value: map-get($ui-media-breakpoints, $breakpoint);

  @media (min-width: $breakpoint-value) {
    @content;
  }
}

@mixin respond-below($breakpoint) {
  $breakpoint-value: map-get($ui-media-breakpoints, $breakpoint);

  @media (max-width: ($breakpoint-value - 1)) {
    @content;
  }
}

@mixin respond-between($lower, $upper) {
  $lower-breakpoint: map-get($ui-media-breakpoints, $lower);
  $upper-breakpoint: map-get($ui-media-breakpoints, $upper);

  @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
    @content;
  }
}

@mixin respond($property, $lg, $md: $lg, $sm: $md, $xs: $sm) {
  #{$property}: $lg;

  @include respond-below(lg) {
    #{$property}: $md;
  }

  @include respond-below(md) {
    #{$property}: $sm;
  }

  @include respond-below(sm) {
    #{$property}: $xs;
  }
}

@mixin respond-font-size($base-lg-size) {
  @include respond(
                  font-size,
                  round(map-get($ui-typo-font-size-multipliers, lg) * $base-lg-size),
                  round(map-get($ui-typo-font-size-multipliers, md) * $base-lg-size),
                  round(map-get($ui-typo-font-size-multipliers, sm) * $base-lg-size),
                  round(map-get($ui-typo-font-size-multipliers, xs) * $base-lg-size)
  );
}

@mixin respond-width($lg, $md: $lg, $sm: $md, $xs: $sm) {
  @include respond(width, $lg, $md, $sm, $xs);
}

@mixin respond-container() {
  margin: 0 auto;
  max-width: 100%;
  box-sizing: border-box;
  padding: 0 var(--ui-grid--spacing-pad);

  @include clearfix();
  @include respond(
                  width,
                  map-get($ui-media-content-width, lg),
                  map-get($ui-media-content-width, md),
                  map-get($ui-media-content-width, sm),
                  map-get($ui-media-content-width, xs)
  );
}

@mixin ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin respond-below-height($breakpoint) {
  $breakpoint-value: map-get($ui-media-height-breakpoints, $breakpoint);

  @media (max-height: ($breakpoint-value - 1)) {
    @content;
  }
}
